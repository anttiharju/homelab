---
- name: Install Flatcar Container Linux
  hosts: rescue
  become: true
  vars:
    flatcar_url_base: "https://raw.githubusercontent.com/flatcar/init/"
    flatcar_url_sha: "3d2f9c6d778b96b08ee7db661bb2af1a6a42679d"
    flatcar_url_path: "/bin/flatcar-install"
  pre_tasks:
    - name: Check if HEAD script matches SHA-locked version
      delegate_to: localhost
      become: false
      ignore_errors: true
      block:
        - name: Get flatcar-install via SHA
          ansible.builtin.uri:
            url: "{{ flatcar_url_base }}{{ flatcar_url_sha }}{{ flatcar_url_path }}"
            return_content: true
          register: sha_locked_script
          check_mode: false

        - name: Get flatcar-install via HEAD
          ansible.builtin.uri:
            url: "{{ flatcar_url_base }}HEAD{{ flatcar_url_path }}"
            return_content: true
          register: head_script
          check_mode: false

        - name: Compare SHA and HEAD scripts
          ansible.builtin.assert:
            that:
              - sha_locked_script.content == head_script.content
            fail_msg: "Warning: SHA is not up-to-date with HEAD version. Please review changes and update the SHA in the playbook."
            success_msg: "SHA-locked flatcar-install matches HEAD"
  tasks:
    - name: Update package repositories
      community.general.apk:
        update_cache: yes

    - name: Install flatcar-install script dependencies
      community.general.apk:
        name:
          - bash
          - bzip2
          - lsblk
          - eudev
          - gpg
          - gawk
        state: present

    - name: Find largest disk
      set_fact:
        largest_disk: >-
          {{ ansible_devices | dict2items |
            selectattr('value.sectors', 'defined') |
            rejectattr('value.sectors', 'equalto', '0') |
            rejectattr('key', 'match', '^(loop|ram).*') |
            sort(attribute='value.sectors', reverse=true) |
            first }}

    - name: Display largest disk
      debug:
        msg: "Largest disk found is /dev/{{ largest_disk.key }} with size {{ largest_disk.value.size }}"

    - name: Create a temporary directory
      ansible.builtin.tempfile:
        state: directory
        suffix: flatcar-install
      register: temp_dir

    - name: Download the SHA-locked flatcar-install script to the temporary directory
      ansible.builtin.get_url:
        url: "{{ flatcar_url_base }}{{ flatcar_url_sha }}{{ flatcar_url_path }}"
        dest: "{{ temp_dir.path }}/flatcar-install"
        mode: "0755"
      register: flatcar_script
