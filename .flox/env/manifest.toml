## Flox Environment Manifest -----------------------------------------
##
##   _Everything_ you need to know about the _manifest_ is here:
##
##               https://flox.dev/docs/concepts/manifest
##
## -------------------------------------------------------------------
# Flox manifest version managed by Flox CLI
version = 1


## Install Packages --------------------------------------------------
##  $ flox install gum  <- puts a package in [install] section below
##  $ flox search gum   <- search for a package
##  $ flox show gum     <- show all versions of a package
## -------------------------------------------------------------------
[install]
python313.pkg-path = "python313"
uv.pkg-path = "uv"


## Environment Variables ---------------------------------------------
##  ... available for use in the activated environment
##      as well as [hook], [profile] scripts and [services] below.
## -------------------------------------------------------------------
[vars]
PYTHON_DIR="$FLOX_ENV_CACHE/python313"
# ANSIBLE_COLLECTIONS_PATH="$FLOX_ENV_PROJECT/collections"


## Activation Hook ---------------------------------------------------
##  ... run by _bash_ shell when you run 'flox activate'.
## -------------------------------------------------------------------
[hook]
on-activate = '''
  python_bin="$(realpath $(which python3))"
  if [ ! -d "$PYTHON_DIR" ]; then
    uv venv --python "$python_bin" "$PYTHON_DIR"
  fi

  (
    source "$PYTHON_DIR/bin/activate"
    uv pip install -r "$FLOX_ENV_PROJECT/ansible/requirements.txt" --quiet
  #
  #  collections="$FLOX_ENV_PROJECT/collections/requirements.yml"
  #  sha_cache="$FLOX_ENV_CACHE/requirements.sha256"
  #  sha_now=$(sha256sum "$collections" | cut -d' ' -f1)
  #
  #  if [ ! -f "$sha_cache" ] || [ "$(cat "$sha_cache")" != "$sha_now" ]; then
  #    ansible-galaxy collection install -r "$collections" && echo "$sha_now" > "$sha_cache"
  #  fi
  )
'''


## Profile script ----------------------------------------------------
## ... sourced by _your shell_ when you run 'flox activate'.
## -------------------------------------------------------------------
[profile]
bash = '''
  echo "Activating python virtual environment" >&2
  source "$PYTHON_DIR/bin/activate"
'''
fish = '''
  echo "Activating python virtual environment" >&2
  source "$PYTHON_DIR/bin/activate.fish"
'''
tcsh = '''
  echo "Activating python virtual environment" >&2
  source "$PYTHON_DIR/bin/activate.csh"
'''
zsh = '''
  echo "Activating python virtual environment" >&2
  source "$PYTHON_DIR/bin/activate"
'''


## Services ----------------------------------------------------------
##  $ flox services start             <- Starts all services
##  $ flox services status            <- Status of running services
##  $ flox activate --start-services  <- Activates & starts all
## -------------------------------------------------------------------
[services]
# myservice.command = "python3 -m http.server"


## Include ----------------------------------------------------------
## ... environments to create a composed environment
## ------------------------------------------------------------------
[include]
# environments = [
#     { dir = "../common" }
# ]


## Other Environment Options -----------------------------------------
[options]
# Systems that environment is compatible with
systems = [
  "aarch64-darwin",
  "aarch64-linux",
  "x86_64-darwin",
  "x86_64-linux",
]
# Uncomment to disable CUDA detection.
# cuda-detection = false
